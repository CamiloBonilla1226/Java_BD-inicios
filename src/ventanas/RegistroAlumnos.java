/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
/**
 *
 * @author PINKILORA
 */
public class RegistroAlumnos extends javax.swing.JFrame {

    /**
     * Creates new form RegistroAlumnos
     */
    public RegistroAlumnos() {
        initComponents();
        this.setLocationRelativeTo(null); //Centrar interfaz
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_grado = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_buscar = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        status = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Grado:");

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        jButton1.setText("Registrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingrese el ID del usuario:");

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        status.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jButton5.setText("Generar PDF");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jButton1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_nombre)
                                    .addComponent(txt_grado, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)))
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(status))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_grado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(status))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try{
          
          String nombre = txt_nombre.getText().trim();
          String grado = txt_grado.getText().trim();

            if(nombre.isEmpty() || grado.isEmpty()) {

                 JOptionPane.showMessageDialog(null, "Por favor, completa todos los campos antes de registrar.");
                
            }else {
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_institucion","root","");
          //Ruta de la bd, nombre de la bd, constrase√±a bd, si no tiene se pone root
          PreparedStatement pst = cn.prepareStatement("insert into estudiante values(?,?,?)"); //nombre, grado, pero tambien tiene ID
          pst.setString(1, "0"); 
            //el primer campo hace referencia a la columna de la tabla, en este caso el ID es el #1
            //Sirve para referenciar el ID si no envia error
            
      
             pst.setString(2,txt_nombre.getText().trim());
         
            //trim quita espacios de la cadena de caracteres, por algun error del usuario, controla eso
          pst.setString(3,txt_grado.getText().trim());
          pst.executeUpdate();
          
          //limpiar
          txt_nombre.setText("");
          txt_grado.setText("");
          
          status.setText("Registro exitoso");
           javax.swing.Timer timer = new javax.swing.Timer(2000, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                status.setText(""); // Limpiar el mensaje de estado
            }
        });
        timer.setRepeats(false); // Asegurarse de que solo se ejecute una vez
        timer.start(); // Iniciar el temporizador
            }
            
      }catch(SQLException e){
          JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());  
      }
            
      
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        try{
            String buscar = txt_buscar.getText().trim();
           

            if(buscar.isEmpty()) {

                 JOptionPane.showMessageDialog(null, "Por favor, ingrese el id del usuario que desea buscar.");
                
            }else {
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_institucion","root","");
                PreparedStatement pst = cn.prepareStatement("select * from estudiante where ID = ?");
                pst.setString(1, txt_buscar.getText().trim());
            
                ResultSet rs = pst.executeQuery();
            
            if(rs.next()){
                txt_nombre.setText(rs.getString("NombreEstudiante"));
                txt_grado.setText(rs.getString("Grado"));
            } else {
                JOptionPane.showMessageDialog(null, "Alumno no registrado.");
            }
            }
            
            
            
        }catch (HeadlessException | SQLException e){ // Imprime el error en la consola
            // Imprime el error en la consola
             JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());    
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            String id= txt_buscar.getText().trim();
            
            if(id.isEmpty()){
                JOptionPane.showMessageDialog(null, "Por favor, ingrese el id del usuario que desea actualizar.");
                return;
            }
            
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_institucion","root","");
            PreparedStatement pst = cn.prepareStatement("update estudiante set NombreEstudiante = ?, Grado = ? where ID= " + id);
            
          
            
            pst.setString(1,txt_nombre.getText().trim());
            pst.setString(2,txt_grado.getText().trim());
            pst.executeUpdate();
            
            status.setText("Modificacion exitosa");
            javax.swing.Timer timer = new javax.swing.Timer(2000, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                status.setText(""); // Limpiar el mensaje de estado
            }
        });
        timer.setRepeats(false); // Asegurarse de que solo se ejecute una vez
        timer.start(); // Iniciar el temporizador
            
            txt_nombre.setText("");
            txt_grado.setText("");
            
        }catch(SQLException e){ // Imprime el error en la consola
            // Imprime el error en la consola
             JOptionPane.showMessageDialog(null, "Error: " + e.getMessage()); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         try {
        String id = txt_buscar.getText().trim();
        
        // Verificar si el campo de ID est√° vac√≠o
        if(id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese el id del usuario que desea eliminar.");
            return;
        }
        
        // Establecer la conexi√≥n con la base de datos
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_institucion","root","");
        
        // Usar PreparedStatement para evitar concatenar el ID directamente
        PreparedStatement pst = cn.prepareStatement("DELETE FROM estudiante WHERE ID = ?");
        
        // Establecer el par√°metro del ID
        pst.setString(1, id);
        
        // Ejecutar la consulta de eliminaci√≥n
        int rowsAffected = pst.executeUpdate();

        if (rowsAffected > 0) {
            // Si se elimin√≥ el registro, mostrar mensaje de √©xito
            status.setText("Eliminaci√≥n exitosa");
        } else {
            // Si no se encontr√≥ el registro, mostrar mensaje de advertencia
            JOptionPane.showMessageDialog(null, "ID no encontrado. No se pudo eliminar.");
        }

        // Limpiar el mensaje de √©xito despu√©s de 2 segundos
        javax.swing.Timer timer = new javax.swing.Timer(2000, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                status.setText(""); // Limpiar el mensaje de estado
            }
        });
        timer.setRepeats(false); // Asegurarse de que solo se ejecute una vez
        timer.start(); // Iniciar el temporizador
        
        // Limpiar los campos de texto
        txt_nombre.setText("");
        txt_grado.setText("");
        
    } catch(SQLException e) {
        // Mostrar mensaje de error si ocurre alg√∫n problema con la base de datos
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage()); 
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Document documento = new Document();
        try{
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/Reporte_Estudiante.pdf"));
            documento.open();
            
            PdfPTable tabla = new PdfPTable(3);
            tabla.addCell("C√≥digo");
            tabla.addCell("Nombre Estudiante");
            tabla.addCell("Grado");
            
            try{
                
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_institucion","root","");
                PreparedStatement pst = cn.prepareStatement("select * from estudiante");
                
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    
                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(3));
                    }while(rs.next());
                    documento.add(tabla);
                }

                
            }catch(DocumentException | SQLException e){
                
            }
            
            documento.close();
            JOptionPane.showMessageDialog(null, "Resporte creado"); 
            
        }catch(  DocumentException | HeadlessException | FileNotFoundException e){
        
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroAlumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel status;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JTextField txt_grado;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}
